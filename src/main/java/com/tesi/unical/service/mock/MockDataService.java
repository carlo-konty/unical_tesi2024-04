package com.tesi.unical.service.mock;

import com.tesi.unical.entity.*;
import com.tesi.unical.repository.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.*;

@Service
public class MockDataService {

    @Autowired
    private CustomerRepo customerRepo;
    @Autowired
    private AddressRepo addressRepo;
    @Autowired
    private ProductRepo productRepo;
    @Autowired
    private OrderRepo orderRepo;
    @Autowired
    private OrderitemRepo orderitemRepo;

    private String[] names = {    "Alexander",
            "Sophia",
            "William",
            "Isabella",
            "Ethan",
            "Olivia",
            "Benjamin",
            "Emma",
            "Michael",
            "Ava",
            "James",
            "Mia",
            "Daniel",
            "Charlotte",
            "Matthew",
            "Amelia",
            "Elijah",
            "Harper",
            "David",
            "Evelyn",
            "Lucas",
            "Abigail",
            "Joseph",
            "Emily",
            "Samuel",
            "Elizabeth",
            "Henry",
            "Sofia",
            "Jackson",
            "Avery",
            "Sebastian",
            "Ella",
            "Aiden",
            "Scarlett",
            "Carter",
            "Grace",
            "Wyatt",
            "Chloe",
            "Jayden",
            "Victoria",
            "Gabriel",
            "Madison",
            "Owen",
            "Luna",
            "Julian",
            "Lily",
            "Isaac",
            "Hannah",
            "Levi",
            "Audrey",
            "Anthony",
            "Zoe",
            "Leo",
            "Penelope",
            "Dylan",
            "Layla",
            "Lincoln",
            "Nora",
            "Caleb",
            "Riley",
            "Jack",
            "Stella",
            "Jonathan",
            "Claire",
            "Connor",
            "Aurora",
            "Landon",
            "Sarah",
            "Ryan",
            "Lucy",
            "Isaiah",
            "Anna",
            "Oliver",
            "Ellie",
            "Luke",
            "Maya",
            "Josiah",
            "Isla",
            "Eli",
            "Mila",
            "Aaron",
            "Aria",
            "Charles",
            "Leah",
            "Nathan",
            "Zoey",
            "Andrew",
            "Paisley",
            "Christian",
            "Adeline",
            "Hunter",
            "Hazel",
            "Cameron",
            "Gabriella",
            "Adrian",
            "Brooklyn",
            "Nicholas",
            "Elena",
            "Jordan",
            "Naomi",
            "Dominic",
            "Lillian",
            "Jeremiah",
            "Addison",
            "Evan",
            "Natalie",
            "Jaxon",
            "Savannah",
            "Brayden",
            "Victoria",
            "Jordan",
            "Natalie",
            "Julian",
            "Grace",
            "Isaiah",
            "Peyton",
            "Josiah",
            "Zoey",
            "Colton",
            "Bella",
            "Jeremiah",
            "Violet",
            "Xavier",
            "Sadie",
            "Damian",
            "Eleanor",
            "Alex",
            "Emery",
            "Brody",
            "Melanie",
            "Kingston",
            "Hannah",
            "Ryder",
            "Katherine",
            "Fernando",
            "Sophie",
            "Kyle",
            "Naomi",
            "Devin",
            "Ivy",
            "Nathaniel",
            "Ruby",
            "Ashton",
            "Paisley",
            "Victor",
            "Isabelle",
            "Timothy",
            "Madeline",
            "Jorge",
            "Jade",
            "Miles",
            "Taylor",
            "Axel",
            "Ashley",
            "Eduardo",
            "Quinn",
            "Peter",
            "Alice",
            "Brady",
            "Jasmine",
            "Bennett",
            "Haley",
            "Oscar",
            "Clara",
            "Miguel",
            "Faith",
            "Richard",
            "Julia",
            "Patrick",
            "Lauren",
            "Marcus",
            "Sophie",
            "Sawyer",
            "Kimberly",
            "Calvin",
            "Ariana",
            "Jesse",
            "Delilah",
            "Maxwell",
            "Rebecca",
            "Wesley",
            "Elise",
            "Ruben",
            "Lydia",
            "Camden",
            "Destiny",
            "Pedro",
            "Valerie",
            "Seth",
            "Molly",
            "Finn",
            "Jennifer",
            "Ivan",
            "Vanessa",
            "Stephen",
            "Sierra",
            "Grant",
            "Brooke",
            "Giovanni",
            "Caroline"};

    private String[] lastNames = {
            "Smith",
            "Johnson",
            "Williams",
            "Brown",
            "Jones",
            "Miller",
            "Davis",
            "Garcia",
            "Rodriguez",
            "Martinez",
            "Hernandez",
            "Lopez",
            "Gonzalez",
            "Wilson",
            "Anderson",
            "Thomas",
            "Taylor",
            "Moore",
            "Jackson",
            "Martin",
            "Lee",
            "Perez",
            "Thompson",
            "White",
            "Harris",
            "Sanchez",
            "Clark",
            "Lewis",
            "Robinson",
            "Walker",
            "Hall",
            "Allen",
            "Young",
            "King",
            "Wright",
            "Scott",
            "Torres",
            "Nguyen",
            "Hill",
            "Flores",
            "Green",
            "Adams",
            "Nelson",
            "Baker",
            "Carter",
            "Mitchell",
            "Perez",
            "Roberts",
            "Turner",
            "Phillips",
            "Campbell",
            "Parker",
            "Evans",
            "Edwards",
            "Collins",
            "Stewart",
            "Sanchez",
            "Morris",
            "Rogers",
            "Reed",
            "Cook",
            "Morgan",
            "Bell",
            "Murphy",
            "Bailey",
            "Rivera",
            "Cooper",
            "Richardson",
            "Cox",
            "Howard",
            "Ward",
            "Torres",
            "Peterson",
            "Gray",
            "Ramirez",
            "James",
            "Watson",
            "Brooks",
            "Kelly",
            "Sanders",
            "Price",
            "Bennett",
            "Wood",
            "Barnes",
            "Ross",
            "Henderson",
            "Coleman",
            "Jenkins",
            "Perry",
            "Powell",
            "Long",
            "Patterson",
            "Hughes",
            "Flores",
            "Washington",
            "Butler",
            "Simmons",
            "Foster",
            "Gonzales",
            "Bryant",
            "Alexander",
            "Russell",
            "Griffin",
            "Diaz",
            "Hayes",
            "Myers",
            "Ford",
            "Hamilton",
            "Graham",
            "Sullivan",
            "Wallace",
            "Woods",
            "Cole",
            "West",
            "Jordan",
            "Owens",
            "Reynolds",
            "Fisher",
            "Ellis",
            "Harrison",
            "Gibson",
            "Mcdonald",
            "Cruz",
            "Marshall",
            "Ortiz",
            "Gomez",
            "Murray",
            "Freeman",
            "Wells",
            "Webb",
            "Simpson",
            "Stevens",
            "Tucker",
            "Porter",
            "Hunter",
            "Hicks",
            "Crawford",
            "Henry",
            "Boyd",
            "Mason",
            "Morales",
            "Kennedy",
            "Warren",
            "Dixon",
            "Ramos",
            "Reyes",
            "Burns",
            "Gordon",
            "Shaw",
            "Holmes",
            "Rice",
            "Robertson",
            "Hunt",
            "Black",
            "Daniels",
            "Palmer",
            "Mills",
            "Nichols",
            "Grant",
            "Knight",
            "Ferguson",
            "Rose",
            "Stone",
            "Hawkins",
            "Dunn",
            "Perkins",
            "Hudson",
            "Spencer",
            "Gardner",
            "Stephens",
            "Payne",
            "Pierce",
            "Berry",
            "Matthews",
            "Arnold",
            "Wagner",
            "Willis",
            "Ray",
            "Watkins",
            "Olson",
            "Carroll",
            "Duncan",
            "Snyder",
            "Hart",
            "Cunningham",
            "Bradley",
            "Lane",
            "Andrews",
            "Ruiz",
            "Harper",
            "Fox",
            "Riley",
            "Armstrong",
            "Carpenter",
            "Weaver",
            "Greene",
            "Lawrence",
            "Elliott",
            "Chavez",
            "Sims"
    };

    private String[] domains = {"gov","it","en","com"};

    private String[] cities = {
            "Rome", "Milan", "Naples", "Turin", "Palermo", "Genoa", "Bologna", "Florence", "Bari", "Catania",
            "Venice", "Verona", "Messina", "Padua", "Trieste", "Taranto", "Brescia", "Prato", "Reggio Calabria", "Modena",
            "Parma", "Perugia", "Livorno", "Ravenna", "Cagliari", "Foggia", "Rimini", "Salerno", "Ferrara", "Sassari",
            "Latina", "Giugliano in Campania", "Monza", "Syracuse", "Bergamo", "Pescara", "Trento", "Forl√¨", "Vicenza",
            "Terni", "Bolzano", "Novara", "Piacenza", "Ancona", "Andria", "Arezzo", "Udine", "Cesena", "Lecce",
            "Pesaro", "Barletta", "Alessandria", "La Spezia", "Pisa", "Pistoia", "Guidonia Montecelio", "Lucca", "Brindisi",
            "Torre del Greco", "Como", "Cinisello Balsamo", "Marsala", "Busto Arsizio", "Varese", "Asti", "Casoria", "Caserta",
            "Gela", "Cosenza", "Ragusa", "Cremona", "Quartu Sant'Elena", "Pavia", "Lamezia Terme", "Massa", "Trapani",
            "Fiumicino", "Aprilia", "Carpi", "Bagheria", "Bitonto", "Portici", "Anzio", "Viterbo", "Vigevano", "Crotone",
            "Pomezia", "Carrara", "Caltanissetta", "Imola", "Carini", "Lucera", "Acerra", "Bisceglie", "Cerveteri"
    };

    String[] products = {
            "Electric Turbo Blender",
            "Solar-Powered Lawn Mower",
            "Smartphone UV Sanitizer",
            "Portable Espresso Maker",
            "Digital Pet Feeder",
            "Anti-Gravity Yoga Mat",
            "3D Printing Pen",
            "Smart Toothbrush with AI",
            "Virtual Reality Headset for Pets",
            "Robotic Window Cleaner",
            "Self-Heating Coffee Mug",
            "Inflatable Car Roof Rack",
            "Biodegradable Phone Case",
            "Bluetooth Tracking Device for Keys",
            "Collapsible Water Bottle",
            "Holographic Projector for Smartphone",
            "Desktop Mini Air Conditioner",
            "Electric Shoe Dryer",
            "USB-Powered Mini Fridge",
            "Smart Sleep Mask with Meditation",
            "Wireless Charging Mouse Pad",
            "Portable Clothes Steamer",
            "Smart Plant Watering System",
            "Pocket-Sized Translator",
            "Automatic Handbag Illuminator",
            "Bluetooth Music Beanie",
            "Folding Travel Guitar",
            "Digital Luggage Scale",
            "Floating Bluetooth Speaker",
            "Heated Ice Cream Scoop",
            "Solar-Powered Phone Charger",
            "Self-Stirring Mug",
            "Hydroponic Indoor Garden Kit",
            "Voice-Activated Alarm Clock",
            "Remote Control Outlet Switch",
            "Inflatable Travel Pillow Hoodie",
            "WiFi-Enabled Coffee Maker",
            "Portable Neck Fan",
            "Reusable Beeswax Food Wraps",
            "Foldable Laptop Stand",
            "Collapsible Silicone Funnel",
            "Electric Wine Bottle Opener",
            "Digital Photo Frame with Video Playback",
            "Smart Light Bulb with Color Control",
            "Motion-Activated Toilet Night Light",
            "Adjustable Laptop Cooling Stand",
            "Cordless Electric Wine Aerator",
            "Bluetooth Smart Lock for Luggage",
            "Multi-Tool Keychain",
            "Compact Travel Umbrella with LED",
            "Insulated Wine Tumbler with Lid",
            "Miniature GPS Tracker for Pets",
            "Portable Handheld Fan",
            "Solar-Powered String Lights",
            "Portable Waterproof Bluetooth Speaker",
            "Smart Kitchen Scale with App",
            "Desktop Punching Bag",
            "WiFi-Enabled Air Purifier",
            "Portable Car Vacuum Cleaner",
            "Digital Luggage Tag",
            "Smart Doorbell with Camera",
            "Collapsible Silicone Lunch Box",
            "Solar-Powered Backpack",
            "Noise-Canceling Sleep Headphones",
            "Electric Pancake Maker",
            "Miniature Indoor Tabletop Fireplace",
            "USB-Powered Desk Fan",
            "Solar-Powered Camping Lantern",
            "Folding Bicycle Helmet",
            "Reusable Silicone Food Storage Bags",
            "Personal Water Filter Straw",
            "Wireless Earbuds with Charging Case",
            "Electric Wine Bottle Chiller",
            "Portable Solar Oven",
            "Smart WiFi Power Strip",
            "Inflatable Pool Float with Built-in Speaker",
            "Digital Voice Recorder Pen",
            "Adjustable Laptop Desk with Cooling Fan",
            "Bluetooth Meat Thermometer",
            "USB-Rechargeable Bike Lights",
            "Portable Campfire Grill",
            "Solar-Powered Outdoor Shower",
            "Portable Hand Crank Charger",
            "Self-Cleaning Litter Box",
            "Smart WiFi Pet Feeder",
            "Solar-Powered Motion Sensor Light",
            "Wireless Charger Car Mount",
            "Portable Espresso Machine for Car",
            "Solar-Powered Fountain Pump",
            "Bluetooth BBQ Grill Thermometer",
            "Compact Binoculars with Night Vision",
            "Reusable Stainless Steel Straws",
            "Portable UV Sterilizer Wand",
            "Foldable Backpack with Solar Panel Charger",
            "Electric Fly Swatter",
            "Bluetooth Sleep Headband with Eye Mask",
            "Solar-Powered Pool Skimmer",
            "Portable Electric Kettle"
    };

    private void fillCustomer(int rowsNumber) {
        List<CustomersModel> a = new LinkedList<>();
        Random random = new Random();
        for(int i=0; i<=rowsNumber; i++) {
            String name = names[random.nextInt(names.length)];
            String lastName = lastNames[random.nextInt(lastNames.length)];
           CustomersModel model =
                    CustomersModel.builder()
                            .id(i+1L)
                            .name(name+ " " + lastName)
                            .email(name + "." + lastName + "@example." + domains[random.nextInt(domains.length)])
                            .build();
            this.customerRepo.insert(model.getId(),model.getName(),model.getEmail().toLowerCase(Locale.ROOT));
        }
    }

    private void fillAddress(int rowsNumber) {
        Random random = new Random();
        for(int i=1; i<=rowsNumber; i++) {
            AddressModel model = AddressModel.builder()
                    .id(i + 0L)
                    .city(cities[random.nextInt(cities.length)])
                    .street("123 Main Street")
                    .country("Italy")
                    .customerId(random.nextLong(rowsNumber-1)+1L)
                    .build();

            this.addressRepo.insert(model.getId(),model.getStreet(),model.getCity(),model.getCountry(),model.getCustomerId());
        }
    }

    private void fillOrders(int rowsNumber) {
        Random random = new Random();
        for(int i=1; i<=rowsNumber; i++) {
            OrderModel model = OrderModel.builder()
                    .id(i+0L)
                    .orderdate(new Date())
                    .customerid(random.nextLong(rowsNumber-1)+1)
                    .totalamount(random.nextDouble(1000))
                    .build();
            this.orderRepo.insert(model.getId(),model.getOrderdate(),model.getTotalamount(),model.getCustomerid());
        }
    }

    private void fillOrderitems(int rowsNumber) {
        Random random = new Random();
        for(int i=1; i<=rowsNumber; i++) {
            OrderitemModel model = OrderitemModel.builder()
                    .id(i + 0L)
                    .orderid(random.nextLong(rowsNumber-1)+1)
                    .productid(random.nextLong(rowsNumber-1)+1)
                    .quantity(random.nextInt(10))
                    .build();

            this.orderitemRepo.insert(model.getId(),model.getOrderid(), model.getProductid(), model.getQuantity());
        }
    }

    private void fillProducts(int rowsNumber) {
        Random random = new Random();
        for(int i=1; i<=rowsNumber; i++) {
            ProductModel model = ProductModel.builder()
                    .id(i + 0L)
                    .name(products[random.nextInt(products.length)])
                    .price(random.nextDouble(1000))
                    .build();

            this.productRepo.insert(model.getId(), model.getName(), model.getPrice());
        }
    }

    public void fillDB(int rowsNumber) {
        this.fillCustomer(rowsNumber);
        this.fillAddress(rowsNumber);
        this.fillProducts(rowsNumber);
        this.fillOrders(rowsNumber);
        this.fillOrderitems(rowsNumber);
    }




}
